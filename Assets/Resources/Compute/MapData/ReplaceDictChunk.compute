#include "Assets/Resources/Compute/MapData/CCoordHash.hlsl"
#pragma kernel CSMain
const static uint numThreads = 2;

RWStructuredBuffer<CInfo> ChunkDict;
StructuredBuffer<uint2> _AddressDict;
uint addressIndex;
int3 oCoord;
uint3 dimension;
uint bOffset;
//origin offset
//x,y,z -> read offset, w -> scale

uint chunkInc;

[numthreads(numThreads,numThreads,numThreads)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if(_AddressDict[addressIndex].y == 0) //Invalid
        return;
    if(id.x >= dimension.x || id.y >= dimension.y || id.z >= dimension.z) 
        return;

    CInfo info;
    info.address = _AddressDict[addressIndex].y;
    info.offset = bOffset + ((((id.x * chunkInc) & 0xFF) << 24) | 
    (((id.y * chunkInc) & 0xFF) << 16) | 
    (((id.z * chunkInc) & 0xFF) << 8));
    info.CCoord = oCoord + int3(id.x, id.y, id.z);

    ChunkDict[HashCoord(info.CCoord)] = info;
}
