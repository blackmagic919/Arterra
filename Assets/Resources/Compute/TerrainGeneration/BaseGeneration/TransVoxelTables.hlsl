/*
6----10---7----11---8
|		  |			|
7		  8			9	
|		  |			|
3----5----4----6----5
|		  |		 	|
2		  3			4
|		  |			|
0----0----1----1----2


B---------14--------C
|		  			|
|		  			|	
|		  			|
15					13
|		  		 	|
|		  			|
|		  			|
9--------12---------A
*/

static const uint cellClass[128] =
{
	0x84020100,0x4040501,0x8c098702,0x5050b84,
	0x8d070801,0xb8b0f05,0x1c0c0d04,0x85858b04,
	0x8c090702,0xc0c1087,0x9a151209,0x1090198c,
	0x9c8c8d84,0xf0f9d0b,0xac101b05,0xb8b0f05,
	0xb870501,0x8b0d0f08,0x19121007,0xf1b9d8d,
	0x9d100f05,0xa11d1e0f,0x32991d8b,0x948fa10b,
	0xf0c8b04,0x8f1c1d0d,0x311a990c,0xa72c321c,
	0xf0c0b04,0x968fa18b,0x27908f85,0x8a8b9485,
	0x5090402,0x850c8b07,0x90150c09,0x8b100f8c,
	0x1b120d87,0x8f991d10,0x2c1a1c0c,0x8b908f0c,
	0x10150c09,0x901a9912,0x30231a15,0x1930319a,
	0xac9a1c8c,0x27313219,0x29302c90,0x2419a710,
	0x58c0484,0x851c0b8d,0x109a0c8c,0xbac0f9c,
	0xf198b0b,0x9432a19d,0xa7318f0f,0x8a27960f,
	0x8b908505,0x8b2c8f1b,0x19309010,0x242927ac,
	0xb108505,0x8aa7940f,0x24198b8b,0x83248a0b,
	0x8b0a0603,0xb0b0e06,0x8f14910a,0x8505178b,
	0x98111306,0x2b971f0e,0x360f180b,0x8505ab0b,
	0x8f16110a,0x8f0f2091,0x1d212214,0x8b0b2d8f,
	0xb78f988b,0xc8cae17,0xb58b2f05,0x484a685,
	0x17910e06,0xab181f13,0x2d222011,0xa62fae98,
	0xae201f0e,0x2a2e331f,0x28ad2e97,0x25262a2b,
	0x8c0f970b,0x8c372e18,0x909dad0f,0x7352836,
	0xc8f2b0b,0x898c2aab,0x870b2605,0x82842585,
	0x5140b0a,0x50f9711,0xb210f16,0x848b8c8f,
	0x2f221891,0x26ad2e20,0x359d370f,0x840b8c8f,
	0x8b210f14,0xb9dad22,0x8f9e9d21,0x858f901d,
	0xb51d368f,0x8790282d,0x348f350b,0x8185078b,
	0x858f0b8b,0x85362b98,0x8b1d8f8f,0x4b50cb7,
	0xa62dab17,0x25282aae,0x7908c8c,0x8287890c,
	0x840b0505,0x8435262f,0x858f0b8b,0x813487b5,
	0x48b8585,0x820725a6,0x81858484,0x80818204,
};
//Each class occupies 5 4-byte integers
static const uint triangulation[56][5] =
{
	{0x0, 0x0, 0x0, 0x0, 0x0}, {0x321310, 0x0, 0x0, 0x0, 0x0}, 
	{0x210, 0x0, 0x0, 0x0, 0x0}, {0x320210, 0x0, 0x0, 0x0, 0x0}, 
	{0x21431410, 0x3, 0x0, 0x0, 0x0}, {0x42521510, 0x4325, 0x0, 0x0, 0x0}, 
	{0x54321310, 0x7646, 0x0, 0x0, 0x0}, {0x54321310, 0x6, 0x0, 0x0, 0x0}, 
	{0x54321310, 0x7657, 0x0, 0x0, 0x0}, {0x543210, 0x0, 0x0, 0x0, 0x0}, 
	{0x21430310, 0x3, 0x0, 0x0, 0x0}, {0x52621610, 0x5435326, 0x0, 0x0, 0x0}, 
	{0x21431410, 0x7653, 0x0, 0x0, 0x0}, {0x21431410, 0x8768653, 0x0, 0x0, 0x0}, 
	{0x42521510, 0x68764325, 0x98, 0x0, 0x0}, {0x32721710, 0x46437637, 0x65, 0x0, 0x0}, 
	{0x42521510, 0x8764325, 0x0, 0x0, 0x0}, {0x54321310, 0x7658747, 0x0, 0x0, 0x0}, 
	{0x54321310, 0x9876, 0x0, 0x0, 0x0}, {0x54321310, 0x8a987657, 0xba, 0x0, 0x0}, 
	{0x30321310, 0x5404, 0x0, 0x0, 0x0}, {0x76543210, 0x8, 0x0, 0x0, 0x0}, 
	{0x31540410, 0x3214, 0x0, 0x0, 0x0}, {0x21871810, 0x47437327, 0x76575, 0x0, 0x0}, 
	{0x52621610, 0x75435326, 0xa98a8, 0x0, 0x0}, {0x52621610, 0x75435326, 0x98, 0x0, 0x0}, 
	{0x21431410, 0xa987653, 0x0, 0x0, 0x0}, {0x42521510, 0x79764325, 0x98, 0x0, 0x0}, 
	{0x21431410, 0x69869653, 0x87, 0x0, 0x0}, {0x32821810, 0x47438738, 0x76575, 0x0, 0x0}, 
	{0x21761710, 0x25426526, 0x43, 0x0, 0x0}, {0x32721710, 0x46437637, 0xba8a9865, 0x0, 0x0}, 
	{0x42521510, 0x6a964325, 0x98797, 0x0, 0x0}, {0x21631610, 0x6546433, 0x0, 0x0, 0x0}, 
	{0x54321310, 0x68659859, 0x87, 0x0, 0x0}, {0x76543210, 0xba98, 0x0, 0x0, 0x0}, 
	{0x10432421, 0x47647417, 0x65, 0x0, 0x0}, {0x31410540, 0x3214, 0x0, 0x0, 0x0}, 
	{0x21431410, 0x47647403, 0x65, 0x0, 0x0}, {0x41431321, 0x58518105, 0x76587, 0x0, 0x0}, 
	{0x54321310, 0x68659859, 0x87, 0x0, 0x0}, {0x42521510, 0x7b764325, 0xa98a87ba, 0x0, 0x0}, 
	{0x72821810, 0x37637328, 0x65464, 0x0, 0x0}, {0x21431410, 0x48748403, 0x76575, 0x0, 0x0}, 
	{0x42521510, 0x7a764325, 0x987a9, 0x0, 0x0}, {0x82921910, 0x38738329, 0x65476474, 0x0, 0x0}, 
	{0x21761710, 0x35326526, 0xa97a7054, 0x987, 0x0}, {0x21541510, 0x79764324, 0x98, 0x0, 0x0}, 
	{0x42521510, 0x98764325, 0xba, 0x0, 0x0}, {0x32721710, 0x46437637, 0xa9865, 0x0, 0x0}, 
	{0x41431321, 0x19106546, 0x87698696, 0x0, 0x0}, {0x21981910, 0x3b328b28, 0xba5b54b4, 0x76a96a65, 0x9079}, 
	{0x60320210, 0x15416307, 0x25, 0x0, 0x0}, {0x21431410, 0x3626523, 0x74087, 0x0, 0x0}, 
	{0x21541510, 0x37634324, 0x85098047, 0x0, 0x0}, {0x21541510, 0x33624324, 0x85098076, 0x0, 0x0}
};

//Each 2 4-byte integers is a vertex layout
//Look at all these magic numbers! Great for understanding!
static const uint vertices[512][2] =
{
	{0x0, 0x0}, {0xcf20, 0x0}, {0x310, 0x0}, {0xfc132, 0x0}, 
	{0xdc14, 0x0}, {0xdf2014, 0x0}, {0xdc034, 0x0}, {0xdf234, 0x0}, 
	{0x694, 0x0}, {0x649fc02, 0x0}, {0x310694, 0x0}, {0x649fc132, 0x0}, 
	{0xcd961, 0x0}, {0xdf20169, 0x0}, {0xdc0369, 0x0}, {0xdf2369, 0x0}, 
	{0xed9b, 0x0}, {0xed9bcf20, 0x0}, {0x310ed9b, 0x0}, {0xeb9fc132, 0xd}, 
	{0xec149b, 0x0}, {0xef20149b, 0x0}, {0xceb9430, 0x0}, {0xef2349b, 0x0}, 
	{0xed46b, 0x0}, {0xf20ed46b, 0xc}, {0x310ed46b, 0x0}, {0x231ed46b, 0xcf}, 
	{0xec16b, 0x0}, {0xfeb6102, 0x0}, {0xceb630, 0x0}, {0xfeb632, 0x0}, 
	{0x8ab, 0x0}, {0x8abcf20, 0x0}, {0x8ab310, 0x0}, {0x8bafc132, 0x0}, 
	{0x8bacd41, 0x0}, {0xabdf2014, 0x8}, {0x8abdc034, 0x0}, {0x8abdf234, 0x0}, 
	{0x6948ab, 0x0}, {0x48abcf20, 0x69}, {0x106948ab, 0x3}, {0x649fc132, 0x8ba}, 
	{0x8bacd961, 0x0}, {0xbdf20169, 0x8a}, {0xbacd9630, 0x8}, {0xabdf2369, 0x8}, 
	{0xdea89, 0x0}, {0xc02dea89, 0xf}, {0x301dea89, 0x0}, {0xa89fc132, 0xde}, 
	{0xec1498a, 0x0}, {0xea894102, 0xf}, {0xec03498a, 0x0}, {0xef23498a, 0x0}, 
	{0xed468a, 0x0}, {0x20ed468a, 0xcf}, {0x10ed468a, 0x3}, {0x32dea864, 0xfc1}, 
	{0xec168a, 0x0}, {0xef20168a, 0x0}, {0xcea8630, 0x0}, {0xef2368a, 0x0}, 
	{0xfea7, 0x0}, {0xcea720, 0x0}, {0x301ef7a, 0x0}, {0xcea7231, 0x0}, 
	{0xfea7dc14, 0x0}, {0xdea72014, 0x0}, {0xea7dc034, 0xf}, {0xed4327a, 0x0}, 
	{0x694fea7, 0x0}, {0x94cea720, 0x6}, {0x694fea7, 0x31}, {0x4cea7231, 0x69}, 
	{0xf7acd961, 0xe}, {0xd961027a, 0xe}, {0xa7dc0369, 0xfe}, {0xdea72369, 0x0}, 
	{0xfd9ba7, 0x0}, {0xcd9ba720, 0x0}, {0x10fd9ba7, 0x3}, {0xc1327ab9, 0xd}, 
	{0xfc149ba7, 0x0}, {0x20149ba7, 0x0}, {0xc0349ba7, 0xf}, {0x7ab9432, 0x0}, 
	{0xdf7ab64, 0x0}, {0xd46ba720, 0xc}, {0x1df7ab64, 0x30}, {0x46ba7231, 0xcd}, 
	{0xfc16ba7, 0x0}, {0x27ab61, 0x0}, {0xcf7ab630, 0x0}, {0xb6327a, 0x0}, 
	{0xfeb87, 0x0}, {0xec0278b, 0x0}, {0x310feb87, 0x0}, {0xceb87231, 0x0}, 
	{0xc14feb87, 0xd}, {0xeb872014, 0xd}, {0xb87dc034, 0xfe}, {0xed43278b, 0x0}, 
	{0x694feb87, 0x0}, {0x9ec0278b, 0x64}, {0x694feb87, 0x310}, {0xceb87231, 0x694}, 
	{0x169feb87, 0xdc}, {0xb8720169, 0xde}, {0x87dc0369, 0xfeb}, {0xd963278b, 0xe}, 
	{0xfd987, 0x0}, {0xcd98720, 0x0}, {0x310fd987, 0x0}, {0xcd987231, 0x0}, 
	{0xcf78941, 0x0}, {0x4102789, 0x0}, {0xcf789430, 0x0}, {0x789432, 0x0}, 
	{0xdf7864, 0x0}, {0xdc027864, 0x0}, {0x1df7864, 0x3}, {0xd4687231, 0xc}, 
	{0xcf7861, 0x0}, {0x786102, 0x0}, {0xcf78630, 0x0}, {0x78632, 0x0}, 
	{0x527, 0x0}, {0xcf750, 0x0}, {0x527310, 0x0}, {0xcf7531, 0x0}, 
	{0x527dc14, 0x0}, {0xfd41057, 0x0}, {0x527dc034, 0x0}, {0xfd4357, 0x0}, 
	{0x694527, 0x0}, {0x694cf750, 0x0}, {0x27310694, 0x5}, {0x49fc1357, 0x6}, 
	{0x572cd961, 0x0}, {0xdf750169, 0x0}, {0x27dc0369, 0x5}, {0xfd96357, 0x0}, 
	{0x572deb9, 0x0}, {0xd9bcf750, 0xe}, {0x7310ed9b, 0x52}, {0x9bcf7531, 0xed}, 
	{0x27ec149b, 0x5}, {0xf750149b, 0xe}, {0x2ceb9430, 0x57}, {0xfeb94357, 0x0}, 
	{0x527ed46b, 0x0}, {0x46bcf750, 0xed}, {0x310ed46b, 0x527}, {0x6bcf7531, 0xed4}, 
	{0x527ec16b, 0x0}, {0xfeb61057, 0x0}, {0x72ceb630, 0x5}, {0xfeb6357, 0x0}, 
	{0x8ab527, 0x0}, {0x8abcf750, 0x0}, {0xab527310, 0x8}, {0xabcf7531, 0x8}, 
	{0xb527dc14, 0x8a}, {0xafd41057, 0x8b}, {0x527dc034, 0x8ab}, {0xbafd4357, 0x8}, 
	{0x948ab527, 0x6}, {0x8abcf750, 0x694}, {0xab527310, 0x6948}, {0xabcf7531, 0x6948}, 
	{0x8bacd961, 0x572}, {0xdf750169, 0x8ab}, {0x27dc0369, 0x8ab5}, {0xbdf75369, 0x8a}, 
	{0x572dea89, 0x0}, {0x98acf750, 0xed}, {0x572dea89, 0x301}, {0x89fc1357, 0xdea}, 
	{0x7ec1498a, 0x52}, {0x7501498a, 0xef}, {0xec03498a, 0x527}, {0xf753498a, 0xe}, 
	{0x72dea864, 0x5}, {0x50ed468a, 0xcf7}, {0x10ed468a, 0x5273}, {0x31ed468a, 0xcf75}, 
	{0x27ec168a, 0x5}, {0xea861057, 0xf}, {0x7ec0368a, 0x52}, {0xef75368a, 0x0}, 
	{0xef25a, 0x0}, {0xcea50, 0x0}, {0x301ef25a, 0x0}, {0xcea531, 0x0}, 
	{0xd41ef25a, 0xc}, {0xdea5014, 0x0}, {0xa52dc034, 0xfe}, {0xed435a, 0x0}, 
	{0x649ef25a, 0x0}, {0x694cea50, 0x0}, {0x301ef25a, 0x649}, {0x94cea531, 0x6}, 
	{0x25acd961, 0xef}, {0xdea50169, 0x0}, {0x5acd9630, 0xef2}, {0xdea5369, 0x0}, 
	{0xfd9ba52, 0x0}, {0xdc05ab9, 0x0}, {0xfd9ba52, 0x31}, {0xcd9ba531, 0x0}, 
	{0xf25ab941, 0xc}, {0xb94105a, 0x0}, {0x349ba52, 0xfc}, {0x435ab9, 0x0}, 
	{0xfd46ba52, 0x0}, {0xdc05ab64, 0x0}, {0xfd46ba52, 0x310}, {0xc135ab64, 0xd}, 
	{0xfc16ba52, 0x0}, {0xb6105a, 0x0}, {0xc036ba52, 0xf}, {0xb635a, 0x0}, 
	{0xfeb852, 0x0}, {0xec058b, 0x0}, {0x1ef258b, 0x3}, {0xec1358b, 0x0}, 
	{0x14feb852, 0xdc}, {0xed41058b, 0x0}, {0x34feb852, 0xdc0}, {0xed4358b, 0x0}, 
	{0x94feb852, 0x6}, {0x49ec058b, 0x6}, {0x94feb852, 0x3106}, {0x4ceb8531, 0x69}, 
	{0x61ef258b, 0xcd9}, {0xeb850169, 0xd}, {0x52dc0369, 0xfeb8}, {0xdeb85369, 0x0}, 
	{0xfd9852, 0x0}, {0xdc0589, 0x0}, {0x10fd9852, 0x3}, {0xcd98531, 0x0}, 
	{0xfc149852, 0x0}, {0x58941, 0x0}, {0xf2589430, 0xc}, {0x43589, 0x0}, 
	{0xdf25864, 0x0}, {0xdc05864, 0x0}, {0xfd46852, 0x31}, {0xcd468531, 0x0}, 
	{0xfc16852, 0x0}, {0x5861, 0x0}, {0xfc036852, 0x0}, {0x5863, 0x0}, 
	{0x5863, 0x0}, {0x8635cf20, 0x0}, {0x5861, 0x0}, {0xfc16852, 0x0}, 
	{0x5863dc14, 0x0}, {0x63df2014, 0x58}, {0xdc05864, 0x0}, {0xdf25864, 0x0}, 
	{0x43589, 0x0}, {0x8534fc02, 0x9}, {0x58941, 0x0}, {0xfc149852, 0x0}, 
	{0xcd98531, 0x0}, {0xf2013589, 0xd}, {0xdc0589, 0x0}, {0xfd9852, 0x0}, 
	{0x3586ed9b, 0x0}, {0xed9bcf20, 0x8635}, {0x5861ed9b, 0x0}, {0x9fc16852, 0xdeb}, 
	{0x86ec149b, 0x35}, {0xef20149b, 0x5863}, {0xeb946850, 0xc}, {0xf258649b, 0xe}, 
	{0xed4358b, 0x0}, {0xed4358b, 0xcf2}, {0xed41058b, 0x0}, {0xcf41258b, 0xed}, 
	{0xec1358b, 0x0}, {0xeb853102, 0xf}, {0xec058b, 0x0}, {0xfeb852, 0x0}, 
	{0xb635a, 0x0}, {0x635acf20, 0xb}, {0xb6105a, 0x0}, {0xfc16ba52, 0x0}, 
	{0x536bcd41, 0xa}, {0x5adf2014, 0xb63}, {0xdc05ab64, 0x0}, {0xfd46ba52, 0x0}, 
	{0x435ab9, 0x0}, {0x435acf20, 0xb9}, {0xb94105a, 0x0}, {0xf25ab941, 0xc}, 
	{0xcd9ba531, 0x0}, {0x20135ab9, 0xdf}, {0xdc05ab9, 0x0}, {0xfd9ba52, 0x0}, 
	{0xdea5369, 0x0}, {0x2dea5369, 0xfc0}, {0xdea50169, 0x0}, {0xfca52169, 0xde}, 
	{0xc149635a, 0xe}, {0x53694102, 0xfea}, {0x694cea50, 0x0}, {0x649ef25a, 0x0}, 
	{0xed435a, 0x0}, {0x20ed435a, 0xcf}, {0xdea5014, 0x0}, {0xcde14a52, 0xf}, 
	{0xcea531, 0x0}, {0xfea53102, 0x0}, {0xcea50, 0x0}, {0xef25a, 0x0}, 
	{0x6358fea7, 0x0}, {0x35cea720, 0x86}, {0x6850ef7a, 0x1}, {0xea725861, 0xc}, 
	{0xfea7dc14, 0x5863}, {0xdea72014, 0x8635}, {0x7dc05864, 0xfea}, {0xd468527a, 0xe}, 
	{0x3589fea7, 0x4}, {0x89cea720, 0x435}, {0x589fea7, 0x41}, {0xa7258941, 0xce}, 
	{0xacd98531, 0xef7}, {0x8531027a, 0xed9}, {0xa7dc0589, 0xfe}, {0xed98527a, 0x0}, 
	{0x58fd9ba7, 0x63}, {0xcd9ba720, 0x6358}, {0x61fd9ba7, 0x58}, {0x68527ab9, 0xdc1}, 
	{0xfc149ba7, 0x3586}, {0x149ba720, 0x8635}, {0x58649ba7, 0xfc0}, {0x8649ba72, 0x5}, 
	{0xf7ab8534, 0xd}, {0x358ba720, 0xcd4}, {0x7ab85014, 0xdf}, {0xba72cd41, 0x58}, 
	{0xc1358ba7, 0xf}, {0x58ba7201, 0x3}, {0xfc058ba7, 0x0}, {0x258ba7, 0x0}, 
	{0xfeb6357, 0x0}, {0xc027536b, 0xe}, {0xfeb61057, 0x0}, {0x527ec16b, 0x0}, 
	{0x4feb6357, 0xdc1}, {0x63572014, 0xdeb}, {0xdcb64057, 0xfe}, {0x527ed46b, 0x0}, 
	{0xfeb94357, 0x0}, {0x275349b, 0xec}, {0xf750149b, 0xe}, {0x27ec149b, 0x5}, 
	{0xdcb91357, 0xfe}, {0x7201deb9, 0x35}, {0xedcb9057, 0xf}, {0x572deb9, 0x0}, 
	{0xfd96357, 0x0}, {0xd9635720, 0xc}, {0xdf750169, 0x0}, {0x572cd961, 0x0}, 
	{0xf7536941, 0xc}, {0x35720149, 0x6}, {0x694cf750, 0x0}, {0x694527, 0x0}, 
	{0xfd4357, 0x0}, {0xcd435720, 0x0}, {0xfd41057, 0x0}, {0x527dc14, 0x0}, 
	{0xcf7531, 0x0}, {0x135720, 0x0}, {0xcf750, 0x0}, {0x527, 0x0}, 
	{0x78632, 0x0}, {0xcf78630, 0x0}, {0x786102, 0x0}, {0xcf7861, 0x0}, 
	{0x8632dc14, 0x7}, {0xd4103687, 0xf}, {0xdc027864, 0x0}, {0xdf7864, 0x0}, 
	{0x789432, 0x0}, {0xcf789430, 0x0}, {0x4102789, 0x0}, {0xcf78941, 0x0}, 
	{0xcd987231, 0x0}, {0x310fd987, 0x0}, {0xcd98720, 0x0}, {0xfd987, 0x0}, 
	{0x3687deb9, 0x2}, {0xbcf78630, 0xed9}, {0x7861ed9b, 0x2}, {0x9bcf7861, 0xed}, 
	{0x32ec149b, 0x786}, {0x8630149b, 0xef7}, {0xb9468720, 0xce}, {0xef78649b, 0x0}, 
	{0xed43278b, 0x0}, {0xed78b430, 0xcf}, {0xeb872014, 0xd}, {0xdcf4178b, 0xe}, 
	{0xceb87231, 0x0}, {0x310feb87, 0x0}, {0xec0278b, 0x0}, {0xfeb87, 0x0}, 
	{0xb6327a, 0x0}, {0xcf7ab630, 0x0}, {0x27ab61, 0x0}, {0xfc16ba7, 0x0}, 
	{0xb632dc14, 0x7a}, {0x41036ba7, 0xfd}, {0xd46ba720, 0xc}, {0xdf7ab64, 0x0}, 
	{0x7ab9432, 0x0}, {0xc0349ba7, 0xf}, {0x20149ba7, 0x0}, {0xfc149ba7, 0x0}, 
	{0xc1327ab9, 0xd}, {0x10fd9ba7, 0x3}, {0xcd9ba720, 0x0}, {0xfd9ba7, 0x0}, 
	{0xdea72369, 0x0}, {0xed7a9630, 0xcf}, {0xd961027a, 0xe}, {0xefca7169, 0xd}, 
	{0x1496327a, 0xec}, {0x149ef7a, 0x63}, {0x94cea720, 0x6}, {0x694fea7, 0x0}, 
	{0xed4327a, 0x0}, {0xfed7a430, 0xc}, {0xdea72014, 0x0}, {0xcfed7a41, 0x0}, 
	{0xcea7231, 0x0}, {0x301ef7a, 0x0}, {0xcea720, 0x0}, {0xfea7, 0x0}, 
	{0xef2368a, 0x0}, {0xcea8630, 0x0}, {0xef20168a, 0x0}, {0xec168a, 0x0}, 
	{0x1ef2368a, 0xcd4}, {0xea863014, 0xd}, {0xfe02a864, 0xdc}, {0xed468a, 0x0}, 
	{0xef23498a, 0x0}, {0xec03498a, 0x0}, {0xea894102, 0xf}, {0xec1498a, 0x0}, 
	{0xef98a231, 0xcd}, {0x301dea89, 0x0}, {0xfcd2098a, 0xe}, {0xdea89, 0x0}, 
	{0xd9ba8632, 0xf}, {0xc0368ab9, 0xd}, {0x9ba86102, 0xfd}, {0xdc168ab9, 0x0}, 
	{0x368ab941, 0xcf2}, {0x630149ba, 0x8}, {0x49bafc02, 0x86}, {0xa8649b, 0x0}, 
	{0x8abdf234, 0x0}, {0x8abdc034, 0x0}, {0xabdf2014, 0x8}, {0x8bacd41, 0x0}, 
	{0x8bafc132, 0x0}, {0x8ab310, 0x0}, {0x8abcf20, 0x0}, {0x8ab, 0x0}, 
	{0xfeb632, 0x0}, {0xceb630, 0x0}, {0xfeb6102, 0x0}, {0xec16b, 0x0}, 
	{0x14feb632, 0xdc}, {0xdeb63014, 0x0}, {0xcfe02b64, 0xd}, {0xed46b, 0x0}, 
	{0xef2349b, 0x0}, {0xceb9430, 0x0}, {0xef20149b, 0x0}, {0xec149b, 0x0}, 
	{0xdef9b231, 0xc}, {0x310ed9b, 0x0}, {0xfedcb902, 0x0}, {0xed9b, 0x0}, 
	{0xdf2369, 0x0}, {0xdc0369, 0x0}, {0xdf20169, 0x0}, {0xcd961, 0x0}, 
	{0xcf236941, 0x0}, {0x963014, 0x0}, {0x649fc02, 0x0}, {0x694, 0x0}, 
	{0xdf234, 0x0}, {0xdc034, 0x0}, {0xdf2014, 0x0}, {0xdc14, 0x0}, 
	{0xfc132, 0x0}, {0x310, 0x0}, {0xcf20, 0x0}, {0x0, 0x0}
};
//1 byte per class, 4 bytes * 14 = 56 classes
static const uint geoCounts[14] = {
	0x42314200, 0x73846453,
	0x75536284, 0x86a69584,
	0xc6a49595, 0x97649364,
	0xa6b5a6b7, 0xc88697a6,
	0xc4a675b7, 0x97866486,
	0x9797c8a6, 0xa6b9a8b7,
	0xcca8b7c6, 0xa8a89786
};

static const int3 cornerIndexFromEdge[16] = {
    {0, 1, 0},
    {1, 2, 0},
	{0, 3, 1},
	{1, 4, 1},
	{2, 5, 1},
	{3, 4, 0},
	{4, 5, 0},
	{3, 6, 1},
	{4, 7, 1},
	{5, 8, 1},
	{6, 7, 0},
	{7, 8, 0},
	{9, 10, 0},
	{10, 12, 1},
	{11, 12, 0},
	{9, 11, 1}
};

static const int3 positionFromIndex[13] = {
    {0, 0, 0},
	{1, 0, 0},
	{2, 0, 0},
	{0, 1, 0},
	{1, 1, 0},
	{2, 1, 0},
	{0, 2, 0},
	{1, 2, 0},
	{2, 2, 0},
	{0, 0, 1},
	{2, 0, 1},
	{0, 2, 1},
	{2, 2, 1}
};

uint CellClass(uint cellIndex){ 
    return (cellClass[cellIndex >> 2] >> ((cellIndex & 0x3) << 3)) & 0x7F;
}

bool IsInverted(uint cellIndex){
	return ((cellClass[cellIndex >> 2] >> ((cellIndex & 0x3) << 3)) & 0x80) != 0;
}

//returns edge index
uint Vertices(uint cellIndex, uint vertexIndex){
    return (vertices[cellIndex][vertexIndex >> 3] >> ((vertexIndex & 0x7) << 2)) & 0xF;
}

//returns vertex index
uint Triangulation(uint CClass, uint vertexIndex){ 
    return (triangulation[CClass][vertexIndex >> 3] >> ((vertexIndex & 0x7) << 2)) & 0xF;
}

uint TriangleCount(uint CClass){
    return (geoCounts[CClass >> 2] >> ((CClass & 0x3) << 3)) & 0xF;
}

uint VertexCount(uint CClass){
    return (geoCounts[CClass >> 2] >> (((CClass & 0x3) << 3) + 4)) & 0xF;
}

static const uint SaveVertex = 0x1B;

static const uint GridCorner[13] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 0, 2, 6, 8 };


/*Eric Leygnel, creator of Transvoxel, in all his wisdom
made the look-up index be sampled in a different order(archimedes spiral)
than the corner order the LUT references without noting it down anywhere.
I hate him for this.*/
static const uint WindingOrder[9] = {0, 1, 2, 5, 8, 7, 6, 3, 4};