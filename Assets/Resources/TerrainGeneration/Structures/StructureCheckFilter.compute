// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

const static int numThreads = 64;

struct structureInfo{
    float3 structurePos;
    uint structureIndex;
    uint2 rotation;
};

struct structureData{
    float3 structurePos;
    uint structureIndex;
    uint2 rotation;
    uint valid;
    int biome;
};

StructuredBuffer<uint> numPoints;
StructuredBuffer<structureData> structureInfos;

AppendStructuredBuffer<structureInfo> validStructures;

[numthreads(numThreads,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if(id.x >= numPoints[0])
        return;
    if(structureInfos[id.x].valid == 0)
        return;
    
    structureInfo newStructure;
    newStructure.structurePos = structureInfos[id.x].structurePos;
    newStructure.structureIndex = structureInfos[id.x].structureIndex;
    newStructure.rotation = structureInfos[id.x].rotation;

    validStructures.Append(newStructure);
}
