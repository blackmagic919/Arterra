// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Generate

#include "Assets/Resources/Utility/GetIndex.hlsl"
#include "Assets/Resources/Utility/PerlinNoiseGenerator.hlsl"

const static int numThreads = 8;
RWStructuredBuffer<float> rawPoints;
RWStructuredBuffer<float> points;
float influenceHeight;

[numthreads(numThreads,numThreads,1)]
void Generate (uint3 id : SV_DispatchThreadID)
{
    if (id.x >= numPointsPerAxis || id.y >= numPointsPerAxis) {
        return;
    }

    uint index = indexFromCoord2D(id.x, id.y);

    float rawNoise = GetRawNoise(float3(id.x, 0, id.y));

    float interpNoise = interpolateValue(rawNoise);

    rawPoints[index] = rawNoise;

    points[index] = interpNoise * influenceHeight;
}