// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Generate
#pragma multi_compile _ CENTER_NOISE

#include "Assets/Scripts/TerrainGeneration/ComputeShaders/Includes/GetIndex.hlsl"
#include "Assets/Scripts/TerrainGeneration/ComputeShaders/Includes/PerlinNoiseGenerator.hlsl"

const static int numThreads = 8;
RWStructuredBuffer<float> rawPoints;
RWStructuredBuffer<float> points;
float influenceHeight;

[numthreads(numThreads,numThreads,1)]
void Generate (uint3 id : SV_DispatchThreadID)
{
    if (id.x >= numPointsPerAxis || id.y >= numPointsPerAxis) {
        return;
    }

    uint index = indexFromCoord2D(id.x, id.y);

    float rawNoise = GetRawNoise(float3(id.x, 0, id.y));

#ifdef CENTER_NOISE
    float interpNoise = interpolateValue(rawNoise) * 2.0f - 1.0f;
#else
    float interpNoise = interpolateValue(rawNoise);
#endif

    rawPoints[index] = rawNoise;

    points[index] = interpNoise * influenceHeight;
}