// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#include "Assets/Resources/Compute/Utility/PerlinNoiseGenerator.hlsl"

const static int numThreads = 64;

struct structurePoint{
    float3 position;
    uint LoD;
};

StructuredBuffer<uint> numPoints;
StructuredBuffer<structurePoint> structurePoints;
RWStructuredBuffer<float> Results;

[numthreads(numThreads,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if(id.x >= numPoints[0])
        return;

    float3 position3D = structurePoints[id.x].position;
    float rawNoise = GetRawNoise(float3(position3D.x, 0, position3D.z));

    Results[id.x] = rawNoise;
}
